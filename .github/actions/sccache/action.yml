name: sccache install
description: Install sccache
runs:
  using: composite
  steps:
    - if: runner.os == 'Linux' && runner.arch == 'X64'
      run: |
        echo "SCCACHE_ARCH=x86_64-unknown-linux-musl" >> $GITHUB_ENV
        echo "SCCACHE_CACHE_DIR=~/.cache/sccache/" >> $GITHUB_ENV
      shell: bash

    - if: runner.os == 'macOS' && runner.arch == 'X64'
      run: |
        echo "SCCACHE_ARCH=x86_64-apple-darwin" >> $GITHUB_ENV
        echo "SCCACHE_CACHE_DIR=~/Library/Caches/Mozilla.sccache" >> $GITHUB_ENV
      shell: bash

    - if: runner.os == 'macOS' && runner.arch == 'ARM64'
      run: |
        echo "SCCACHE_ARCH=aarch64-apple-darwin" >> $GITHUB_ENV
        echo "SCCACHE_CACHE_DIR=~/Library/Caches/Mozilla.sccache" >> $GITHUB_ENV
      shell: bash

    # - name: Save sccache
    #   uses: actions/cache@v3
    #   continue-on-error: false
    #   with:
    #     path: $SCCACHE_CACHE_DIR
    #     # NOTE: this key/restore key allows us to name the cache with the cargo lock hash
    #     #       but then use the restore-key as a matching prefix to search for. So if we miss
    #     #       the cache on `key` we can hit on the restore key.
    #     key: sccache-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/Cargo.lock') }}
    #     restore-keys: sccache-${{ runner.os }}-${{ runner.arch }}

    - name: Cache cargo registry
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: cargo-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: cargo-${{ runner.os }}-${{ runner.arch }}

    - env:
        SCCACHE_URL: https://github.com/mozilla/sccache/releases/download
        SCCACHE_VERSION: v0.3.3
      run: |
        SCCACHE_FILE=sccache-$SCCACHE_VERSION-$SCCACHE_ARCH
        curl -L "$SCCACHE_URL/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
        mkdir -p $HOME/.local/bin
        mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
        echo "$HOME/.local/bin" >> $GITHUB_PATH
      shell: bash

    - uses: risc0/rust-cache@v2
      id: rust-cache
      with:
        key: rust-cache-${{ runner.os }}-${{ runner.arch }}
    - name: rust-cache hits
      run: echo ${{ steps.rust-cache.outputs.cache-hit }}
